module formal.hello

open import data.nat
open import data.eq

// Example theorem: addition is commutative for natural numbers.
def plus-comm (a b : Nat) : Eq Nat (plus a b) (plus b a) =>
  Nat.rec (\k => Eq Nat (plus k b) (plus b k))
    (refl b)
    (\k ih =>
      transport (\x => Eq Nat (succ (plus k b)) (succ x)) ih
        (refl (succ (plus k b))))
    a
