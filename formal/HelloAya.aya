module formal.hello

open import data.nat
open import data.eq

// Example theorem: addition is commutative for natural numbers.
def plus-comm (a b : Nat) : Eq Nat (plus a b) (plus b a) =>
  Nat.rec (Eq Nat (plus zero b) (plus b zero))
    (refl (plus b zero))
    (\k ih =>
      transport (\x => Eq Nat (succ x) (succ (plus b k))) ih)
    a
